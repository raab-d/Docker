# Lab 5 - docker-compose

## Create your docker-compose file

Create a docker-compose.yaml for a Flask application (python) that use a redis.

### Tips

### Create your file

1. There is two file 
   1. `requirement.txt`, contain python dependencies 
   
  
   2. `app.py`, contain our flask app that listen on port `9090`


2. Create a new directory named `myapp-compose` 
3. Copy `requirement.txt` and `app.py` in `myapp-compose`
4. Run `cd myapp-compose`
5. Create a file name `myapp-compose`

repone 1 à5:
on crée le fichier myapp-compose (chui dans cd 'monchemin')
   mkdir myapp-compose
on copy les fichiers app et requirement
   cp requirement.txt myapp-compose/
   cp app.py myapp-compose/
   cd myapp-compose

### Modify the myapp-compose

1. Use the version `3.9`
2. 2 services
   1. `web`
      1. Build on demand the dockerfile
      2. Expose the port 9092:9090
      3. Has a network `my-shared-network`
  2. `redis`
     1. Image: `redis:alpine`
     2. Has a network `my-shared-network`
3. A network `my-shared-network`

### set up the stack

1. Use the `docker-compose up -d` command
docker-compose up -d

2. curl the `localhost:9092`
   1. Check that the `number` of visit is incremented at each call

$ curl http://localhost:9092
   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                    Dload  Upload   Total   Spent    Left  Speed
   100    65  100    65    0     0   9012      0 --:--:-- --:--:-- --:--:--  8125This is a sfeir school about Docker !
   I have been seen 1 times.

