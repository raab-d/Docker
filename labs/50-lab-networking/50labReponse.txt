# Lab 3 - Network

## Expose port

### Tips

- Port must be higher than 1024

### Expose port

1. Pull `couchdb:2.1`
   $ docker pull couchdb:2.1
   2.1: Pulling from library/couchdb
   Digest: sha256:05a8b4a9bfe8e90fdf8630b404098aab5122c8ead228ad9b8d081309266b1cfb
   Status: Image is up to date for couchdb:2.1
   docker.io/library/couchdb:2.1

2. Run couchdb, name it `couchedb1` and expose the port `5984` (detached)
   $ docker run -d --name couchdb1 -p 5984:5984 couchdb:2.1
   049f8b26fd5b09aecd12814f1c763a6e0f23a9f343a3a8a92721b23c59a26ed7



3. Check the couchedb version on `http://localhost:5984`
   $ curl http://localhost:5984
   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                    Dload  Upload   Total   Spent    Left  Speed
   100   116  100   116    0     0   1674      0 --:--:-- --:--:-- --:--:--  1681{"couchdb":"Welcome","version":"2.1.2","features":["scheduler"],"vendor":{"name":"The Apache Software Foundation"}}


4. Run temporary busybox container
docker run --rm -it busybox sh

5. Call `localhost:5984` with `wget` from busybox container
   1. What happened ?
   on a un refus 
   winpty docker run --rm -it busybox sh
   / # wget http://localhost:5984
   Connecting to localhost:5984 (127.0.0.1:5984)
   wget: can't connect to remote host (127.0.0.1): Connection refused

   2. Why ?
   busybox ne se réfère pas au même localhost car chaque conteneur a sont localhost
   
6. Call `couchdb1:5984` with `wget` from busybox container
   1. What happened ?
   $ winpty docker run --rm -it busybox sh
   / # wget http://localhost:5984
   Connecting to localhost:5984 (127.0.0.1:5984)
   wget: can't connect to remote host (127.0.0.1): Connection refused
   / # ^C

   / # wget couchdb1:5984
   wget: bad address 'couchdb1:5984'
   / # wget http://couchdb1:5984
   wget: bad address 'couchdb1:5984'

   il y aura un echec aussi

   2. Why ?
   car les conteneurs ne peux pas communiquer entre eux
7. Create a new network named `busyboxtocouchdb`
 docker network create busyboxtocouchdb
74a0339533ec71d4f7870845194547eb2258d2a9af02235b51afb7ad987e4b58

8. Connect `couchdb1` to the network with `docker network connect ...`
docker network connect busyboxtocouchdb couchdb1

9. Re-run busybox connected to the same network
docker run --rm -it --network busyboxtocouchdb busybox sh

10. Call `couchdb1:5984` with `wget` from busybox container
/ # wget http://couchdb1:5984
Connecting to couchdb1:5984 (172.20.0.2:5984)
saving to 'index.html'
index.html           100% |******************************************************************************************************************************************************************|   116  0:00:00 ETA
'index.html' saved
